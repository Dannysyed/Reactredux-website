{"ast":null,"code":"import { createStore } from 'redux';\nlet statedata = {\n  counter: 0,\n  isshown: true\n};\n\nlet Reducerfunction = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : statedata;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == 'increment') {\n    return {\n      counter: state.counter + 1,\n      isshown: state.isshown\n    };\n  }\n\n  if (action.type == 'decrement') {\n    return {\n      counter: state.counter - 1,\n      isshown: state.isshown\n    };\n  }\n\n  if (action.type == 'custom') {\n    return {\n      counter: state.counter + action.payload,\n      isshown: state.isshown\n    };\n  }\n\n  if (action.type == 'toggle') {\n    return {\n      counter: state.counter,\n      isshown: !state.isshown\n    };\n  }\n\n  return {\n    counter: state.counter,\n    isshown: state.isshown\n  };\n};\n\n_c = Reducerfunction;\nlet store = createStore(Reducerfunction); // let subscriptionfn = () => {\n//     console.log(store.getState());\n// }\n// store.subscribe(subscriptionfn)\n// store.dispatch({ type: 'increment' })\n\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducerfunction\");","map":{"version":3,"sources":["C:/visiual codes/Forkify/React_prac/reactredux/src/store/index.js"],"names":["createStore","statedata","counter","isshown","Reducerfunction","state","action","type","payload","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,IAAIC,SAAS,GACb;AACIC,EAAAA,OAAO,EAAE,CADb;AAEIC,EAAAA,OAAO,EAAE;AAFb,CADA;;AAKA,IAAIC,eAAe,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBJ,SAAsB;AAAA,MAAXK,MAAW;;AACjD,MAAIA,MAAM,CAACC,IAAP,IAAe,WAAnB,EAAgC;AAE5B,WAAO;AAAEL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CAA3B;AAA8BC,MAAAA,OAAO,EAAEE,KAAK,CAACF;AAA7C,KAAP;AACH;;AACD,MAAIG,MAAM,CAACC,IAAP,IAAe,WAAnB,EAAgC;AAC5B,WAAO;AAAEL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CAA3B;AAA8BC,MAAAA,OAAO,EAAEE,KAAK,CAACF;AAA7C,KAAP;AACH;;AACD,MAAIG,MAAM,CAACC,IAAP,IAAe,QAAnB,EAA6B;AACzB,WAAO;AAAEL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,OAAlC;AAA2CL,MAAAA,OAAO,EAAEE,KAAK,CAACF;AAA1D,KAAP;AAEH;;AACD,MAAIG,MAAM,CAACC,IAAP,IAAe,QAAnB,EAA6B;AAEzB,WAAO;AAAEL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAjB;AAA0BC,MAAAA,OAAO,EAAE,CAACE,KAAK,CAACF;AAA1C,KAAP;AACH;;AAGD,SAAO;AACHD,IAAAA,OAAO,EAAEG,KAAK,CAACH,OADZ;AACqBC,IAAAA,OAAO,EAAEE,KAAK,CAACF;AADpC,GAAP;AAGH,CArBD;;KAAIC,e;AAsBJ,IAAIK,KAAK,GAAGT,WAAW,CAACI,eAAD,CAAvB,C,CACA;AACA;AAEA;AACA;AACA;;AACA,eAAeK,KAAf","sourcesContent":["import { createStore } from 'redux'\r\nlet statedata =\r\n{\r\n    counter: 0,\r\n    isshown: true\r\n}\r\nlet Reducerfunction = (state = statedata, action) => {\r\n    if (action.type == 'increment') {\r\n\r\n        return { counter: state.counter + 1, isshown: state.isshown }\r\n    }\r\n    if (action.type == 'decrement') {\r\n        return { counter: state.counter - 1, isshown: state.isshown }\r\n    }\r\n    if (action.type == 'custom') {\r\n        return { counter: state.counter + action.payload, isshown: state.isshown }\r\n\r\n    }\r\n    if (action.type == 'toggle') {\r\n\r\n        return { counter: state.counter, isshown: !state.isshown, }\r\n    }\r\n\r\n\r\n    return {\r\n        counter: state.counter, isshown: state.isshown\r\n    }\r\n}\r\nlet store = createStore(Reducerfunction)\r\n// let subscriptionfn = () => {\r\n//     console.log(store.getState());\r\n\r\n// }\r\n// store.subscribe(subscriptionfn)\r\n// store.dispatch({ type: 'increment' })\r\nexport default store"]},"metadata":{},"sourceType":"module"}