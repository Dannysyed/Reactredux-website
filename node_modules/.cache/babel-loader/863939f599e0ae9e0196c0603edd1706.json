{"ast":null,"code":"import { createStore } from 'redux';\nlet statedata = {\n  counter: 0\n};\n\nlet Reducerfunction = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : statedata;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type == 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type == 'custom') return {\n    counter: state.counter + action.payload\n  };\n  return {\n    counter: state.counter\n  };\n};\n\n_c = Reducerfunction;\nlet store = createStore(Reducerfunction); // let subscriptionfn = () => {\n//     console.log(store.getState());\n// }\n// store.subscribe(subscriptionfn)\n// store.dispatch({ type: 'increment' })\n\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducerfunction\");","map":{"version":3,"sources":["C:/visiual codes/Forkify/React_prac/reactredux/src/store/index.js"],"names":["createStore","statedata","counter","Reducerfunction","state","action","type","payload","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,IAAIC,SAAS,GACb;AACIC,EAAAA,OAAO,EAAE;AADb,CADA;;AAIA,IAAIC,eAAe,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBH,SAAsB;AAAA,MAAXI,MAAW;;AACjD,MAAIA,MAAM,CAACC,IAAP,IAAe,WAAnB,EAAgC;AAC5B,WAAO;AAAEJ,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA3B,KAAP;AAEH;;AACD,MAAIG,MAAM,CAACC,IAAP,IAAe,WAAnB,EAAgC;AAC5B,WAAO;AACHJ,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AADtB,KAAP;AAGH;;AACD,MAAIG,MAAM,CAACC,IAAP,IAAe,QAAnB,EACI,OAAO;AACHJ,IAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACE;AAD7B,GAAP;AAKJ,SAAO;AACHL,IAAAA,OAAO,EAAEE,KAAK,CAACF;AADZ,GAAP;AAGH,CAnBD;;KAAIC,e;AAoBJ,IAAIK,KAAK,GAAGR,WAAW,CAACG,eAAD,CAAvB,C,CACA;AACA;AAEA;AACA;AACA;;AACA,eAAeK,KAAf","sourcesContent":["import { createStore } from 'redux'\r\nlet statedata =\r\n{\r\n    counter: 0\r\n}\r\nlet Reducerfunction = (state = statedata, action) => {\r\n    if (action.type == 'increment') {\r\n        return { counter: state.counter + 1 }\r\n\r\n    }\r\n    if (action.type == 'decrement') {\r\n        return {\r\n            counter: state.counter - 1\r\n        }\r\n    }\r\n    if (action.type == 'custom')\r\n        return {\r\n            counter: state.counter + action.payload\r\n        }\r\n\r\n\r\n    return {\r\n        counter: state.counter\r\n    }\r\n}\r\nlet store = createStore(Reducerfunction)\r\n// let subscriptionfn = () => {\r\n//     console.log(store.getState());\r\n\r\n// }\r\n// store.subscribe(subscriptionfn)\r\n// store.dispatch({ type: 'increment' })\r\nexport default store"]},"metadata":{},"sourceType":"module"}