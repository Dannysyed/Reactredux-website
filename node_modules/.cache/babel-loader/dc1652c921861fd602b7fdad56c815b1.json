{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nlet useValid = valuedfn => {\n  _s();\n\n  let [value, setvalue] = useState('');\n  let [touch, settouch] = useState(false);\n  let valueisvalid = valuedfn(value);\n  let valueisinvalid = touch && !valueisvalid;\n\n  let valuehandle = e => {\n    setvalue(e.target.value);\n  };\n\n  let valueistouched = () => {\n    settouch(true);\n  };\n\n  let valuereset = () => {\n    setvalue('');\n  };\n\n  return {\n    value,\n    valueisvalid,\n    valueisinvalid,\n    valueistouched,\n    valuehandle,\n    valuereset\n  };\n};\n\n_s(useValid, \"aqx141JgKbEJytW1aFSllm01QME=\");\n\nexport default useValid;","map":{"version":3,"sources":["C:/visiual codes/Forkify/React_prac/reactredux/src/hook/validationhook.js"],"names":["useState","useValid","valuedfn","value","setvalue","touch","settouch","valueisvalid","valueisinvalid","valuehandle","e","target","valueistouched","valuereset"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAIC,QAAQ,GAAIC,QAAD,IAAc;AAAA;;AACzB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAhC;AAEA,MAAIO,YAAY,GAAGL,QAAQ,CAACC,KAAD,CAA3B;AACA,MAAIK,cAAc,GAAGH,KAAK,IAAI,CAACE,YAA/B;;AAEA,MAAIE,WAAW,GAAIC,CAAD,IAAO;AACrBN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR;AACH,GAFD;;AAGA,MAAIS,cAAc,GAAG,MAAM;AACvBN,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAGA,MAAIO,UAAU,GAAG,MAAM;AACnBT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD;;AAIA,SAAO;AACHD,IAAAA,KADG;AAEHI,IAAAA,YAFG;AAGHC,IAAAA,cAHG;AAIHI,IAAAA,cAJG;AAKHH,IAAAA,WALG;AAMHI,IAAAA;AANG,GAAP;AASH,CA1BD;;GAAIZ,Q;;AA2BJ,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\"\r\n\r\nlet useValid = (valuedfn) => {\r\n    let [value, setvalue] = useState('')\r\n    let [touch, settouch] = useState(false)\r\n\r\n    let valueisvalid = valuedfn(value)\r\n    let valueisinvalid = touch && !valueisvalid\r\n\r\n    let valuehandle = (e) => {\r\n        setvalue(e.target.value)\r\n    }\r\n    let valueistouched = () => {\r\n        settouch(true)\r\n    }\r\n    let valuereset = () => {\r\n        setvalue('')\r\n    }\r\n\r\n    return {\r\n        value,\r\n        valueisvalid,\r\n        valueisinvalid,\r\n        valueistouched,\r\n        valuehandle,\r\n        valuereset\r\n    }\r\n\r\n}\r\nexport default useValid"]},"metadata":{},"sourceType":"module"}